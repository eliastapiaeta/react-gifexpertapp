{"version":3,"sources":["componenst/AddCategory.js","helpers/getGifs.js","componenst/GifGridItem.js","componenst/GifGrid.js","hooks/useFetchGifs.js","base/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","inputNumberValue","setInputNumberValue","onSubmit","e","preventDefault","trim","length","cats","num","cat","handleSubmit","id","placeholder","type","value","onChange","target","size","pattern","Number","getGifs","categoria","quantity","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","category","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,OAGEF,mBAAS,IAHX,mBAGvCG,EAHuC,KAGrBC,EAHqB,KAqB9C,OACI,sBAAMC,SAAU,SAACC,GAAD,OAXC,SAACA,GAClBA,EAAEC,iBAEEN,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAAAW,GAAI,OAAK,CAAEC,IAAKR,EAAkBS,IAAKX,IAAnC,mBAAoDS,OACtER,EAAc,KAMKW,CAAaP,IAApC,SACI,sBAAKQ,GAAG,UAAR,UACI,qBAAKA,GAAG,WAAR,SACI,2CAEI,uBACIC,YAAY,kBACZC,KAAK,OACLC,MAAOhB,EACPiB,SA1BM,SAACZ,GAC3BJ,EAAcI,EAAEa,OAAOF,eA8Bf,qBAAKH,GAAG,aAAR,SACI,yCAEI,uBACIC,YAAY,WACZC,KAAK,OACLI,KAAK,KACLC,QAAQ,aACRJ,MAAOd,EACPe,SArCK,SAACZ,GAC1BF,EAAoBkB,OAAOhB,EAAEa,OAAOF,gBAwC5B,qBAAKH,GAAG,WAAR,SACI,kCACI,uBACA,uBAAOE,KAAK,SAASF,GAAG,UAAUG,MAAM,eAGhD,oBAAIH,GAAG,iB,+BC1DVS,EAAO,uCAAG,WAAOC,EAAWC,GAAlB,uBAAAC,EAAA,6DAIbC,EAJa,iDAImCC,UAAUJ,GAJ7C,kBAIiEI,UAAUH,GAJ3E,sDAKAI,MAAMF,GALN,cAKbG,EALa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHrB,GAAIqB,EAAIrB,GACRsB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAZvB,kBAgBZM,GAhBY,4CAAH,wDCEPM,EAAc,SAAC,GAAwB,IAAtBzB,EAAqB,EAArBA,GAAIsB,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAErC,OACI,sBAAKa,UAAU,6CAAf,UACI,qBAAK1B,GAAIA,EAAI2B,IAAKd,EAAKe,IAAKN,IAC5B,4BAAIA,QCHHO,EAAU,SAAC,GAA6B,IAA3BnB,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,ECDxB,SAACD,EAAWC,GAAc,IAAD,EAEvBzB,mBAAS,CAC/BgC,KAAM,GACNY,SAAS,IAJoC,mBAE1CC,EAF0C,KAEnCC,EAFmC,KA0BjD,OAnBAC,qBAAU,WAENxB,EAAQC,EAAWC,GACduB,MAAK,SAAAC,GACFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAItB,CAACpB,EAAWC,IASRoB,EDtB2BK,CAAa1B,EAAWC,GAA5CY,EAHkC,EAGxCL,KAAcY,EAH0B,EAG1BA,QAEtB,OACI,qCACI,qBAAIJ,UAAU,sCAAd,UAAqDhB,EAArD,KAAkEC,EAAlE,OAGCmB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAEOH,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIrB,aEiCtBqC,EAjDM,WAAM,MAYanD,mBAAS,IAZtB,mBAYhBoD,EAZgB,KAYJrD,EAZI,KAcvB,OAAO,qCAEH,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAKIqD,EAAWlB,KAAI,SAACmB,EAAUC,GAAX,OAKX,aAJA,CAIC,EAAD,CAEI9B,UAAW6B,EAASzC,IACpBa,SAAU4B,EAAS1C,KAFd0C,EAAWC,U,YC1BpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5f91d845.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const [inputNumberValue, setInputNumberValue] = useState(10);\r\n\r\n    const handleInputChangeText = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleInputChangeNum = (e) => {\r\n        setInputNumberValue(Number(e.target.value));\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias(cats => [{ num: inputNumberValue, cat: inputValue }, ...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n            <div id='formGif'>\r\n                <div id='textGifs'>\r\n                    <label>\r\n                        Imagen\r\n                        <input\r\n                            placeholder='Imagen a buscar'\r\n                            type='text'\r\n                            value={inputValue}\r\n                            onChange={handleInputChangeText}\r\n                        // onKeyDown={(e) => e.key === 'Enter' && onsubmit}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div id='numberGifs'>\r\n                    <label>\r\n                        Lote\r\n                        <input\r\n                            placeholder='Cantidad'\r\n                            type='text'\r\n                            size='11'\r\n                            pattern='[0-9]{1,2}'\r\n                            value={inputNumberValue}\r\n                            onChange={handleInputChangeNum}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div id='divEnter'>\r\n                    <label>\r\n                        <br />\r\n                        <input type=\"submit\" id=\"btnForm\" value=\"Enter\" />\r\n                    </label>\r\n                </div>\r\n                <br id='brGifs' />\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (categoria, quantity) => {\r\n\r\n    // console.log(categoria, quantity);\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=${encodeURI(quantity)}&api_key=Y9ZpxPqgrW8xKcg06GWFeWUFfQGGKTiX`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeInLeft'>\r\n            <img id={id} src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { /* useState, useEffect */ } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria, quantity }) => {\r\n\r\n    // console.log(categoria, quantity);\r\n    const { data: images, loading } = useFetchGifs(categoria, quantity);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__bounceIn'>{categoria} ({quantity})</h3>\r\n\r\n            { /* loading ? 'Cargando...' : 'Data cargada' */}\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n            {<div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                        // <li key={id}>{title}</li>\r\n                    ))\r\n                } \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria, quantity) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(categoria, quantity)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }, [categoria, quantity])\r\n\r\n    /*   setTimeout(() => {\r\n          setstate({\r\n              data: [1, 2, 3, 4, 5, 6, 7],\r\n              loading: false\r\n          })\r\n      }, 3000); */\r\n\r\n    return state;  // { data:[], loading:true }\r\n}\r\n\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"../componenst/AddCategory\";\r\nimport { GifGrid } from '../componenst/GifGrid.js';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categorias = ['One Punch', 'Samurai X', 'Dragon ball'];\r\n\r\n    // const [categorias, setCategorias] = useState(['One Punch', 'Samurai X', 'Dragon ball']);\r\n    /* \r\n        const handleAdd = () => {\r\n            // setCategorias([...categorias,'hunterXhunter']);\r\n            setCategorias(cats => [...cats, 'hunterXhunter']);\r\n        }\r\n     */\r\n\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    return <>\r\n\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategorias={setCategorias} />\r\n        <hr />\r\n\r\n        {\r\n            // console.log(categorias)\r\n            // categorias === 'undefinded' && console.log(categorias[0])\r\n            categorias.map((category, i) =>\r\n                // <li>{category}</li>\r\n                // console.log(category)\r\n\r\n                // limpiar(category.num)\r\n                <GifGrid\r\n                    key={category + i}\r\n                    categoria={category.cat}\r\n                    quantity={category.num}\r\n\r\n                />\r\n                // category.map(cat => {\r\n                // let texto = ((typeof cat.text) !== 'undefined') ? cat.text : false;\r\n                // let num = ((typeof cat.num) !== 'undefined') ? cat.num : false;\r\n                // console.log(cat.text);\r\n                // })\r\n                // <GifGrid\r\n                //     key={category + i}\r\n                //     categoria={category}\r\n                // />\r\n            )\r\n        }\r\n    </>\r\n\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './base/GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// Tarea\n/**\n *  GifExpertApp\n *  <h2>GifExpertApp</h2>\n *  <hr />\n */\n"],"sourceRoot":""}